# 将自己的包安装
devtools::install()
# 将自己的包安装
devtools::install()
# 将自己的包安装
devtools::install()
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
testdata <- readRDS("../testdata.rds")
class(testdata)
a <- as.data.frame(testdata)
a
scale(a)
length(a)
rep("T",length(a))
nrow(a)
library(PCaMLmodel)
model
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
readRDS("../testdata.rds")
?predict
sessionInfo()
model <- readRDS("../purpose_model.rds")
View(model)
class(model)
model$coefficients
predict
?predict
predict()
model
model$formula
model$var
dz_model <- model
dz_model$y <- NULL
View(dz_model)
dz_model$y
model$y
testdata <- readRDS("../testdata.rds")
new_data <- testdata[,model$subFeature]
predict(dz_model,type='lp',as.data.frame(new_data))
predict(dz_model,type='lp',as.data.frame(new_data))
stats::predict(dz_model,type='lp',as.data.frame(new_data))
class(model)
class(dz_model)
stats::predict(model,type='lp',as.data.frame(new_data))
model <- readRDS("../purpose_model.rds")
testdata <- readRDS("../testdata.rds")
class(model)
new_data <- testdata[,model$subFeature]
predict(model,type='lp',as.data.frame(new_data))
stats::predict(model,type='lp',as.data.frame(new_data))
View(model)
stats::predict(model,as.data.frame(new_data))
predict.coxph
library(survival)
predict.coxph
predict(model,type='lp',as.data.frame(new_data))
predict
sessionInfo()
?predict
stats::predict.coxph()
FSBCR_model <- model
FSBCR_model$var
FSBCR_model$loglik
FSBCR_model$anova
FSBCR_model$coefficients
FSBCR_model$score
FSBCR_model$iter
FSBCR_model$linear.predictors
FSBCR_model$residuals
FSBCR_model$means
FSBCR_model$method
FSBCR_model$n
FSBCR_model$nevent
FSBCR_model$terms
FSBCR_model$assign$JAGN1
FSBCR_model$wald.test
FSBCR_model$wald.test
FSBCR_model$wald.test
FSBCR_model$concordance
FSBCR_model$timefix
FSBCR_model$formula
FSBCR_model$call
FSBCR_model$subFeature
FSBCR_model$coefficients
length(FSBCR_model$coefficients)
FSBCR_model$subFeature
FSBCR_model$y
FSBCR_model$y <- NULL
stats::predict(FSBCR_model,type = 'lp',as.data.frame(new_data))
FSBCR_model$assign
FSBCR_model$terms
FSBCR_model$terms
FSBCR_model$nevent
FSBCR_model$call
FSBCR_model$var
usethis::use_data(FSBCR_model)
testdata
test_input_data <- testdata
test_input_data
usethis::use_data(test_input_data)
?scale
scale(test_input_data)
a <- scale(test_input_data)
a
class(test_input_data)
dz <- as.data.frame(test_input_data)
scale(dz)
isTRUE("TRUE")
isTRUE(TRUE)
isTRUE(FALSE)
isTRUE(f)
isTRUE(F)
isTRUE(T)
a
colnames(a)
a[,FSBCR_model$subFeature]
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
pkgload::dev_help('fat_stemness_BCR_Score')
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
pkgload::dev_help('fat_stemness_BCR_Score')
# 将自己的包安装
devtools::install()
# 将自己的包安装
devtools::install()
# 将自己的包安装
devtools::install()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
sessionInfo()
FSBCR_model
test_input_data
fat_stemness_BCR_Score(test_input_data)
library(survival)
fat_stemness_BCR_Score(test_input_data)
fat_stemness_BCR_Score(test_input_data,scale_data = F)
FSBCR_model$subFeature
a <- test_input_data
a[,-c("DOCK1")]
a[,c("DOCK1")]
a[,-c("DOCK1")]
a
a[,"DOCK1"]
a[,- "DOCK1"]
b <- as.data.frame(a)
b[,-c("DOCK1")]
b[,-"DOCK1"]
b[,1]
colnames(b)
b[,"DOCK1"]
subset(b,select = -c("DOCK1"))
dplyr::select(b,-c("DOCK1"))
C <- dplyr::select(b,-c("DOCK1"))
fat_stemness_BCR_Score(C)
C
C[,"DOCK1"]
colnames(C)
fat_stemness_BCR_Score(C)
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
install.packages("survival")
library(survival)
a <- test_input_data
a <- as.data.frame(a)
dplyr::select(a,-c("DOCK1"))
B <- dplyr::select(a,-c("DOCK1"))
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(a,scale_data = F)
fat_stemness_BCR_Score(B)
library(PCaMLmodel)
fat_stemness_BCR_Score(test_input_data)
library(survival)
predict.coxph
?predict.coxph
survival::predict.coxph
?survival::predict.coxph()
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
fat_stemness_BCR_Score(test_input_data)
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
fat_stemness_BCR_Score(test_input_data)
survival::predict.coxph(FSBCR_model,type = 'lp',as.data.frame(test_input_data[,FSBCR_model$subFeature]))
predict.coxph(FSBCR_model,type = 'lp',as.data.frame(test_input_data[,FSBCR_model$subFeature]))
survival::predict(FSBCR_model,type = 'lp',as.data.frame(test_input_data[,FSBCR_model$subFeature]))
predict(FSBCR_model,type = 'lp',as.data.frame(test_input_data[,FSBCR_model$subFeature]))
library(PCaMLmodel)
remove.packages("PCaMLmodel", lib="~/R/x86_64-redhat-linux-gnu-library/4.3")
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
fat_stemness_BCR_Score(test_input_data)
a <- test_input_data
b <- dplyr::select(a,-c("DOCK1"))
b <- as.data.frame(a)
c <- dplyr::select(b,-c("DOCK1"))
ncol(a)
ncol(c)
fat_stemness_BCR_Score(c)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
colnames(c)
colnames(c)[(!is.element(FSBCR_model$subFeature,colnames(c)))]
c[,FSBCR_model$subFeature]
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
fat_stemness_BCR_Score(a)
is.element()
?is.element()
unique(is.element(FSBCR_model$subFeature,colnames(c)))
isFALSE(unique(is.element(FSBCR_model$subFeature,colnames(c))))
isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(c))))
FSBCR_model$subFeature %in% colnames(c)
is.element(FSBCR_model$subFeature,colnames(c))
is.element(FSBCR_model$subFeature,colnames(a))
unique(is.element(FSBCR_model$subFeature,colnames(a)))
isFALSE(unique(is.element(FSBCR_model$subFeature,colnames(a))))
isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(a))))
isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(C))))
isFALSE(unique(is.element(FSBCR_model$subFeature,colnames(c))))
isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(C))))
c
C
isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(c))))
source("R/fat_stemness_riskscore.R")
FSBCR_model$subFeature %in% colnames(c)
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(c)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
is.element(FSBCR_model$subFeature,colnames(c))
(!is.element(FSBCR_model$subFeature,colnames(c)))
colnames(c)[(!is.element(FSBCR_model$subFeature,colnames(c)))]
isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(c))))
!(isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(c)))))
!(isTRUE(unique(is.element(FSBCR_model$subFeature,colnames(a)))))
c[,FSBCR_model$subFeature]
a[,FSBCR_model$subFeature]
c[,FSBCR_model$subFeature]
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
fat_stemness_BCR_Score(a)
FSBCR_model$subFeature %in% colnames(c)
isFALSE(FSBCR_model$subFeature %in% colnames(c))
setdiff(FSBCR_model$subFeature,colnames(c))
source("R/fat_stemness_riskscore.R")
FSBCR_model$subFeature %in% colnames(c)
fat_stemness_BCR_Score(c)
fat_stemness_BCR_Score(c)
fat_stemness_BCR_Score(a)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
fat_stemness_BCR_Score(testdata = test_input_data)
a <- as.data.frame(test_input_data)
FSBCR_model$subFeature
FSBCR_model$coefficients
names(FSBCR_model$coefficients)
test_input_data[,((names(FSBCR_model$coefficients)) %in% a)]
a
ncol(test_input_data)
match(FSBCR_model$coefficients,test_input_data)
match(FSBCR_model$coefficients,a)
match(FSBCR_model$coefficients,colnames(a))
match(FSBCR_model$coefficients,colnames(test_input_data))
colnames(test_input_data)
match(names(FSBCR_model$coefficients),colnames(test_input_data))
length(match(names(FSBCR_model$coefficients),colnames(test_input_data)))
FSBCR_model$coefficients
length(FSBCR_model$coefficients)
length(FSBCR_model$subFeature)
match(names(FSBCR_model$coefficients),colnames(test_input_data))
test_input_data[,match(names(FSBCR_model$coefficients),colnames(test_input_data))]
bbb <- test_input_data[,match(names(FSBCR_model$coefficients),colnames(test_input_data))]
predict(FSBCR_model,type='lp',as.data.frame(bbb))
setdiff(FSBCR_model$coefficients,colnames(a))
setdiff(names(FSBCR_model$coefficients),colnames(a))
names(FSBCR_model$coefficients)
colnames(a)
setdiff(names(FSBCR_model$coefficients),colnames(a))
names(FSBCR_model$coefficients)
unique(names(FSBCR_model$coefficients),colnames(a))
unique(names(FSBCR_model$coefficients),colnames(bbb))
intersect(names(FSBCR_model$coefficients),colnames(a))
bbb
a
b <- as.data.frame(a)
names(FSBCR_model$coefficients)
dplyr::select(b,-c("KPTN"))
c <- dplyr::select(b,-c("KPTN"))
names(FSBCR_model$coefficients) %in% colnames(c)
colnames(c) %in% names(FSBCR_model$coefficients)
names(FSBCR_model$coefficients) %in% colnames(c)
names(FSBCR_model$coefficients)[names(FSBCR_model$coefficients) %in% colnames(c)]
names(FSBCR_model$coefficients)[!names(FSBCR_model$coefficients) %in% colnames(c)]
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(c)
fat_stemness_BCR_Score(a)
source("./R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
a <- as.data.frame(test_input_data)
FSBCR_model$coefficients
dplyr::select(a,-c("EBPL","ATPAF2"))
b <- dplyr::select(a,-c("EBPL","ATPAF2"))
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(test_input_data)
colnames(test_input_data)
colnames(test_input_data)["JAGN1"]
a[,"JAGN1"]
!(names(FSBCR_model$coefficients) %in% colnames(a))
!(names(FSBCR_model$coefficients) %in% colnames(c))
colnames(test_input_data)
!(names(FSBCR_model$coefficients) %in% colnames(c))
!(names(FSBCR_model$coefficients) %in% colnames(b))
test_input_data[,FSBCR_model$coefficients]
test_input_data[,FSBCR_model$coefficients]
test_input_data[,names(FSBCR_model$coefficients)]
a[,names(FSBCR_model$coefficients)]
b[,names(FSBCR_model$coefficients)]
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(b)
?paste0
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
?message
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
paste(1:2,sep = ",")
paste(1:2,sep = "+")
paste(c("1","2"),sep = "+")
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
source("R/fat_stemness_riskscore.R")
fat_stemness_BCR_Score(b)
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
fat_stemness_BCR_Score(test_input_data)
fat_stemness_BCR_Score(test_input_data,scale_data = F)
a <- as.data.frame(test_input_data)
FSBCR_model$coefficients
b <- dplyr::select(a,-c("EBPL","PKP3"))
fat_stemness_BCR_Score(b)
?fat_stemness_BCR_Score
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
?fat_stemness_BCR_Score
?fat_stemness_BCR_Score
?fat_stemness_BCR_Score()
fat_stemness_BCR_Score(testdata = test_input_data)
?predict
?fat_stemness_BCR_Score
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
library(PCaMLmodel)
?fat_stemness_BCR_Score
FSBCR_model
FSBCR_model$y
FSBCR_model$anova
?usethis::use_data_raw()
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
?PCaMLmodel::fat_stemness_BCR_Score()
PCaMLmodel::fat_stemness_BCR_Score(test_input_data)
test_input_data
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
# 建立说明文档（及将写好的注释进行封装）
devtools::document()
# 将自己的包安装
devtools::install()
?PCaMLmodel::fat_stemness_BCR_Score()
# 将自己的包进行打包（相当于创建包）
devtools::build()
getwd()
load('./data/test_input_data.rda')
head(test_input_data)
write.table(test_input_data,"/home/daizao/test.txt")
write.table(test_input_data,"/home/daizao/test.txt",quote = F,sep = '\t')
View(test_input_data)
View(test_input_data)
write.table(test_input_data,"/home/daizao/test.txt",append = F,quote = F,sep = '\t')
write.table(test_input_data,"/home/daizao/test.txt",append = T,quote = F,sep = '\t')
write.table(test_input_data,"/home/daizao/test.txt",quote = T,sep = '\t')
write.table(test_input_data,"/home/daizao/test.txt",quote = F,sep = '\t')
library(PCaMLmodel)
test_input_data
class(test_input_data)
library(fread)
library(data.table)
a <- fread("~/test.txt")
a
fat_stemness_BCR_Score(a)
fat_stemness_BCR_Score(data.matrix(a))
library(PCaMLmodel)
fat_stemness_BCR_Score(data.matrix(a))
library(survival)
fat_stemness_BCR_Score(data.matrix(a))
fat_stemness_BCR_Score(test_input_data)
data.matrix(a)
a[,1]
b <- data.matrix(a)
b
names(b)
names(b) <- a[,1]
b
b <- data.matrix(a)
rownames(b)
rownames(b) <- a[,1]
a[,1]
as.character(a[,1])
a <- fread("~/test.txt")
a
as.data.frame(a)
a <- fread("~/test.txt",data.table = T)
a
library(tidyverse)
library(tidyverse)
a <- fread("~/test.txt") %>% column_to_rownames("sampleid")
View(a)
b <- data.matrix(a)
View(b)
fat_stemness_BCR_Score(test_input_data)
b
fat_stemness_BCR_Score(b)
as.data.frame(fat_stemness_BCR_Score(b))
colnames(as.data.frame(fat_stemness_BCR_Score(b)))
